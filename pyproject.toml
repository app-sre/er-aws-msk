[tool.poetry]
name = "er-aws-msk"
version = "0.1.0"
description = "Please describe me"
authors = ["first-name last-name <email@address.com>"]
license = "Apache 2.0"
readme = "README.md"
packages = [{ include = "er_aws_msk" }]
homepage = "https://github.com/app-sre/er-aws-msk"
repository = "https://github.com/app-sre/er-aws-msk"
documentation = "https://github.com/app-sre/er-aws-msk"

[tool.poetry.dependencies]
python = "^3.11"
cdktf-cdktf-provider-aws = "^19.30.0"
cdktf-cdktf-provider-random = "^11.0.2"
external-resources-io = ">=0.3.2"
pydantic = "^2.8.2"
ruff = "^0.6.1"
boto3 = "^1.35.30"

[tool.poetry.group.dev.dependencies]
ruff = "0.6.2"
mypy = "^1.11.0"
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
boto3-stubs-lite = { extras = ["ec2"], version = "^1.35.30" }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Ruff configuration
[tool.ruff]
line-length = 88
target-version = 'py311'
required-version = "0.6.2" # keep in sync with dev dependencies!
src = ["er_aws_msk"]
extend-exclude = [
    ".local", # used by poetry in local venv
    ".cache", # used by poetry in local venv
]
fix = true

[tool.ruff.lint]
preview = true
select = ["ALL"]
ignore = [
    "CPY",  # Missing copyright header
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D211", # No blank lines allowed before class docstring
    "D212", # multi-line-summary-first-line
    "D213", # multi-line-summary-second-line
    "D4",   # Doc string style
    "E501", # Line too long
    "G004", # Logging statement uses string formatting
    "S101", # Use of assert detected. Pytest uses assert
    # pydoclint
    "DOC",
    # May conflict with the formatter, https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q",
    "COM812",
    "COM819",
    "ISC001",
]
[tool.ruff.format]
preview = true

[tool.ruff.lint.isort]
known-first-party = ["er_aws_msk"]

# Mypy configuration
[tool.mypy]
files = ["er_aws_msk", "tests"]
enable_error_code = ["truthy-bool", "redundant-expr"]
no_implicit_optional = true
check_untyped_defs = true
warn_unused_ignores = true
show_error_codes = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

# Coverage configuration
[tool.coverage.run]
branch = true
omit = ["*/tests/*"]

[tool.coverage.report]
fail_under = 90
